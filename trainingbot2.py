from aiogram import types, executor, Bot, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton,InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove  #Remove —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤—ã
import sqlite3
import config
from database import get_trainings, database_start, create_user, edit_user, pay
import spk
conn = sqlite3.connect('profiles.db')
cursor = conn.cursor()

async def on_startup(_):
    await database_start()

storage = MemoryStorage()
bot = Bot(config.token)
price = types.LabeledPrice(label="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞", amount=199*100)
dp = Dispatcher(bot, storage=storage)

#–ö–Ω–æ–ø–æ—á–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def kb_1() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('üôåüèª–ü—Ä–∏—Å—Ç—É–ø–∏–º!'))

    return kb

def kb_2() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('–ú—É–∂—Å–∫–æ–π'))
    kb.add(KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π'))

    return kb

def kb_3() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('üìù–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –∏–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìù'))
    kb.add(KeyboardButton('–†–∞—Å—á—ë—Ç –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞'))
    kb.add(KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–µ'))
    kb.add(KeyboardButton('–†–∞—Å—á—ë—Ç —Å—É—Ç–æ—á–Ω–æ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–∞–ª–æ—Ä–∏–π'))
    kb.add(KeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'))
    kb.add(KeyboardButton('üìö–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –∏ –ø–∏—Ç–∞–Ω–∏—éüìö'))
    

    return kb

def kb_4() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('üî¥–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏'))
    kb.add(KeyboardButton('üü†–ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'))
    kb.add(KeyboardButton('üü°–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'))
    kb.add(KeyboardButton('üü¢–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'))
    kb.add(KeyboardButton('üóø–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'))
    kb.add(KeyboardButton('üîô–ù–∞–∑–∞–¥'))

    return kb

#–ò–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–æ—á–∫–∏
catalog_list = InlineKeyboardMarkup(row_width=2)
catalog_list.add(InlineKeyboardButton(text='‚è≤–ò–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å', callback_data='edit_weight'),
                 InlineKeyboardButton(text='üìè–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ—Å—Ç', callback_data='edit_height'),
                 InlineKeyboardButton(text='üìÜ–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', callback_data='edit_age'),
                 InlineKeyboardButton(text='‚ö§–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª', callback_data='edit_gender'),
                 InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û', callback_data='edit_fullname'),
                 InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='delete_form'))

month_list = InlineKeyboardMarkup(row_width=2)
month_list.add(InlineKeyboardButton(text="–Ø–Ω–≤–∞—Ä—å", callback_data="–Ø–Ω–≤–∞—Ä—å"),
            InlineKeyboardButton(text="–§–µ–≤—Ä–∞–ª—å", callback_data="–§–µ–≤—Ä–∞–ª—å"),
            InlineKeyboardButton(text="–ú–∞—Ä—Ç", callback_data="–ú–∞—Ä—Ç"),
            InlineKeyboardButton(text="–ê–ø—Ä–µ–ª—å", callback_data="–ê–ø—Ä–µ–ª—å"),
            InlineKeyboardButton(text="–ú–∞–π", callback_data="–ú–∞–π"),
            InlineKeyboardButton(text="–ò—é–Ω—å", callback_data="–ò—é–Ω—å"),
            InlineKeyboardButton(text="–ò—é–ª—å", callback_data="–ò—é–ª—å"),
            InlineKeyboardButton(text="–ê–≤–≥—É—Å—Ç", callback_data="–ê–≤–≥—É—Å—Ç"),
            InlineKeyboardButton(text="–°–µ–Ω—Ç—è–±—Ä—å", callback_data="–°–µ–Ω—Ç—è–±—Ä—å"),
            InlineKeyboardButton(text="–û–∫—Ç—è–±—Ä—å", callback_data="–û–∫—Ç—è–±—Ä—å"),
            InlineKeyboardButton(text="–ù–æ—è–±—Ä—å", callback_data="–ù–æ—è–±—Ä—å"),
            InlineKeyboardButton(text="–î–µ–∫–∞–±—Ä—å", callback_data="–î–µ–∫–∞–±—Ä—å"))

class ClientStates(StatesGroup):
    fullname = State()
    gender = State()
    weight = State()
    height = State()
    age = State()
    edit_profile = State()
    edit_fullname = State()
    edit_gender = State()
    edit_weight = State()
    edit_height = State()
    edit_age = State()
    select_month = State()
    delete_form = State()



@dp.message_handler(lambda message: message.text == 'üìö–õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –∏ –ø–∏—Ç–∞–Ω–∏—éüìö')
async def show_trainings(message: types.Message):
    cursor.execute("SELECT paid_status FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
    data = cursor.fetchall()
    for row in data:
        st = str(row[0])
        if st == 'Yes':
            await ClientStates.select_month.set()
            await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü:", parse_mode='html', reply_markup= month_list)
        else:
            await message.answer(text="–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É", parse_mode='html', reply_markup=kb_3())

@dp.callback_query_handler(lambda c: c.data in ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"], state=ClientStates.select_month)
async def send_trainings(callback_query: types.CallbackQuery, state: FSMContext):
    month = callback_query.data
    trainigs_by_month = await get_trainings(month)
    await bot.send_message(callback_query.from_user.id, trainigs_by_month)
    await state.finish()

#–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
@dp.message_handler(commands=['start'])
async def start_text(message: types.Message) -> None:
    await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —è –ø–æ–º–æ–≥—É –í–∞–º —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é "
                     "–ø—Ä–æ–≥—Ä–∞–º–º—É —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –ø–∏—Ç–∞–Ω–∏—è.", parse_mode='html', reply_markup=kb_1()) #–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ text
    await create_user(user_id=message.from_user.id)
    await message.delete()


#–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã
@dp.callback_query_handler(lambda c: c.data == "edit_fullname", state=ClientStates.edit_profile)
async def edit_fullname(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.edit_fullname.set()
    await bot.send_message(callback_query.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –§–ò–û:", parse_mode='html')

@dp.message_handler(state=ClientStates.edit_fullname)
async def load_new_fullname(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['new_fullname'] = message.text
    if not message.text.isdigit() and any(char in "–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—èABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" for char in message.text):
        cursor.execute(f"Update users SET fullname ='{data['new_fullname']}' where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–§–ò–û —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    else:
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –§–ò–û –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏–ª–∏ –ª–∞—Ç–∏–Ω–∏—Ü—ã!", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "edit_gender", state=ClientStates.edit_profile)
async def edit_gender(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.edit_gender.set()
    await bot.send_message(callback_query.from_user.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª:", parse_mode='html', reply_markup=ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton("–ú—É–∂—Å–∫–æ–π"), KeyboardButton("–ñ–µ–Ω—Å–∫–∏–π")]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(state=ClientStates.edit_gender)
async def load_new_gender(message: types.Message, state: FSMContext):
    if message.text == "–ú—É–∂—Å–∫–æ–π" or message.text == "–ñ–µ–Ω—Å–∫–∏–π":
        cursor.execute(f"Update users SET gender ='{message.text}' where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–ü–æ–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    else:
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "edit_weight", state=ClientStates.edit_profile)
async def edit_weight(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.edit_weight.set()
    await bot.send_message(callback_query.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–µ—Å:", parse_mode='html')

@dp.message_handler(state=ClientStates.edit_weight)
async def load_new_weight(message: types.Message, state: FSMContext):
    if message.text.isdigit() and 20 < int(message.text) < 200:
        cursor.execute(f"Update users SET weight ={message.text} where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–í–µ—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    else:
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å!", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "edit_height", state=ClientStates.edit_profile)
async def edit_height(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.edit_height.set()
    await bot.send_message(callback_query.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–æ—Å—Ç:", parse_mode='html')

@dp.message_handler(state=ClientStates.edit_height)
async def load_new_height(message: types.Message, state: FSMContext):
    if message.text.isdigit() and 100 < int(message.text) < 250:
        cursor.execute(f"Update users SET height ={message.text} where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–†–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    else:
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç!", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "edit_age", state=ClientStates.edit_profile)
async def edit_age(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.edit_age.set()
    await bot.send_message(callback_query.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:", parse_mode='html')

@dp.message_handler(state=ClientStates.edit_age)
async def load_new_age(message: types.Message, state: FSMContext):
    if message.text.isdigit() and 10 < int(message.text) < 100:
        cursor.execute(f"Update users SET age ={message.text} where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–í–æ–∑—Ä–∞—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    else:
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "delete_form", state=ClientStates.edit_profile)
async def edit_gender(callback_query: types.CallbackQuery, state: FSMContext):
    await ClientStates.delete_form.set()
    await bot.send_message(callback_query.from_user.id, text="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É?", parse_mode='html', reply_markup=ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç")]
        ],
        resize_keyboard=True
    ))

@dp.message_handler(state=ClientStates.delete_form)
async def load_new_gender(message: types.Message, state: FSMContext):
    if message.text == "–î–∞":
        cursor.execute(f"Update users SET age = NULL, weight = NULL, fullname = NULL, gender = NULL, height = NULL where user_id={message.from_user.id}")
        conn.commit()
        await message.answer(text="–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!", parse_mode='html', reply_markup=kb_3())
        await state.finish()
    elif message.text == "–ù–µ—Ç":
        await message.answer(text="–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã!", parse_mode='html', reply_markup=kb_3())
        await state.finish()


#–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message:message.text.isdigit() or not any(char in "–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç"
    "—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—èABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" for char in message.text), state=ClientStates.fullname)
async def check_gender(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –§–ò–û –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏–ª–∏ –ª–∞—Ç–∏–Ω–∏—Ü—ã!')

@dp.message_handler(lambda message:  message.text not in("–ú—É–∂—Å–∫–æ–π","–ñ–µ–Ω—Å–∫–∏–π"), state=ClientStates.gender)
async def check_gender(message: types.Message):
    await message.answer('–î–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –ø–æ–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ:–ú—É–∂—Å–∫–æ–π, –ñ–µ–Ω—Å–∫–∏–π!')

@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 100 or float(message.text) < 10, state=ClientStates.age)
async def check_age(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç!')

@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 250 or float(message.text) < 100, state=ClientStates.height)
async def check_age(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç!')

@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 200 or float(message.text) < 20, state=ClientStates.weight)
async def check_age(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –≤–µ—Å!')






#–í—ã–≤–æ–¥—ã –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.message_handler(content_types=['text'])
async def start_work(message: types.Message) -> None:
    if message.text == 'üôåüèª–ü—Ä–∏—Å—Ç—É–ø–∏–º!':
        await ClientStates.fullname.set()
        await message.answer(text="üí¨–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ —Å–µ–±–µ.", parse_mode='html')
        await message.answer(text="–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –§–ò–û:", parse_mode='html', reply_markup=ReplyKeyboardRemove())#–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ text

    elif message.text == 'üîô–ù–∞–∑–∞–¥':
        await message.answer(text="–í–∞—Å –≤–µ—Ä–Ω—É–ª–æ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", parse_mode='html',reply_markup=kb_3())

    elif message.text == '–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É':
        await message.answer(text="–í—ã –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏", parse_mode='html',reply_markup=kb_3())
        await bot.send_invoice(message.chat.id,
                               title="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞",
                               description="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É",
                               provider_token=config.pay_token,
                               currency="rub",
                               is_flexible=False,
                               prices=[price],
                               start_parameter="full_access",
                               payload="test-invoice-payload")

    elif message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–µ':
        await message.answer(text=str(spk.info_of_coach), parse_mode='html', reply_markup=kb_3())

    elif message.text == "üìù–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∫–µ—Ç—É –∏ –∏–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—Éüìù":
        cursor.execute("SELECT fullname, gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()
        await ClientStates.edit_profile.set()

        for row in data:
            fio = str(row[0])
            pol = str(row[1])
            let = str(row[2])
            rost = str(row[3])
            ves = str(row[4])

        await message.bot.send_message(message.from_user.id, "–§–ò–û: " + fio + "\n" +"‚ö§–ü–æ–ª: " + pol+"\n"+"üìÜ–í–æ–∑—Ä–∞—Å—Ç: " + let +"\n"+"üìè–†–æ—Å—Ç: "
                                       + rost +"\n"+"‚è≤–í–µ—Å: " + ves,reply_markup= catalog_list)

    elif message.text == '–†–∞—Å—á—ë—Ç –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞':
        await message.answer(text=str(spk.IMT), parse_mode='html', reply_markup=kb_3())

        cursor.execute("SELECT height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            rost = (row[0])
            ves = (row[1])

        if rost and ves!= "":
            await bot.send_message(message.from_user.id,"–í–∞—à –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(round((float(ves)/(float(rost)/100)**2),1)), parse_mode='html', reply_markup=kb_3())
        else:
            await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ò–ú–¢. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())



    elif message.text == '–†–∞—Å—á—ë—Ç —Å—É—Ç–æ—á–Ω–æ–π –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–∞–ª–æ—Ä–∏–π':
        await message.answer(text="–ö–∞–∫–æ–π —É –í–∞—Å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏?"+'\n'+str(spk.obraz_zhizny), parse_mode='html', reply_markup=kb_4())

    elif message.text == "üî¥–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏":
        cursor.execute("SELECT gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            pol1 = (row[0])
            let1 = (row[1])
            rost1 = (row[2])
            ves1 = (row[3])

            if pol1 and let1 and rost1 and ves1 !="":
                pol = str(pol1)
                let = float(let1)
                rost = float(rost1)
                ves = float(ves1)

                if pol == '–ñ–µ–Ω—Å–∫–∏–π':
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10*ves + 6.25*rost - 4.92*let - 161)*1.2)))+" –∫–∫–∞–ª\n"
                                        "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +
                                        "-" + str(round(0.8*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +
                                        "-" + str(round(0.75*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +
                                        "-" + str(round(0.7*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +
                                        "-" + str(round(0.6*((10*ves + 6.25*rost - 4.92*let - 161)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª –≤ –¥–µ–Ω—å", parse_mode='html', reply_markup=kb_4())
                else:
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10*ves + 6.25*rost - 4.92*let + 5)*1.2)))+" –∫–∫–∞–ª\n"
                                        "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +
                                        "-" + str(round(0.8*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +
                                        "-" + str(round(0.75*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +
                                        "-" + str(round(0.7*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +
                                        "-" + str(round(0.6*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª\n"
                                        "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5*((10*ves + 6.25*rost - 4.92*let + 5)*1.2))) +" –∫–∫–∞–ª –≤ –¥–µ–Ω—å", parse_mode='html', reply_markup=kb_4())
            else:
                await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –°–ü–ö. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())

    elif message.text == "üü†–ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
        cursor.execute("SELECT gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            pol1 = (row[0])
            let1 = (row[1])
            rost1 = (row[2])
            ves1 = (row[3])

            if pol1 and let1 and rost1 and ves1 !="":
                pol = str(pol1)
                let = float(let1)
                rost = float(rost1)
                ves = float(ves1)

                if pol == '–ñ–µ–Ω—Å–∫–∏–π':
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.375))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
                else:
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.375))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
            else:
                await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –°–ü–ö. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())

    elif message.text == "üü°–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
        cursor.execute("SELECT gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            pol1 = (row[0])
            let1 = (row[1])
            rost1 = (row[2])
            ves1 = (row[3])

            if pol1 and let1 and rost1 and ves1 !="":
                pol = str(pol1)
                let = float(let1)
                rost = float(rost1)
                ves = float(ves1)

                if pol == '–ñ–µ–Ω—Å–∫–∏–π':
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.55))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
                else:
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.55))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
            else:
                await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –°–ü–ö. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())

    elif message.text == "üü¢–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
        cursor.execute("SELECT gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            pol1 = (row[0])
            let1 = (row[1])
            rost1 = (row[2])
            ves1 = (row[3])

            if pol1 and let1 and rost1 and ves1 !="":
                pol = str(pol1)
                let = float(let1)
                rost = float(rost1)
                ves = float(ves1)

                if pol == '–ñ–µ–Ω—Å–∫–∏–π':
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.725))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
                else:
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.725))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
            else:
                await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –°–ü–ö. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())

    elif message.text == "üóø–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
        cursor.execute("SELECT gender, age, height, weight FROM users WHERE user_id == '{key}' ".format(key=message.from_user.id))
        data = cursor.fetchall()

        for row in data:
            pol1 = (row[0])
            let1 = (row[1])
            rost1 = (row[2])
            ves1 = (row[3])

            if pol1 and let1 and rost1 and ves1 !="":
                pol = str(pol1)
                let = float(let1)
                rost = float(rost1)
                ves = float(ves1)

                if pol == '–ñ–µ–Ω—Å–∫–∏–π':
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let - 161) * 1.9))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
                else:
                    await bot.send_message(message.from_user.id, "–°–ü–ö –¥–ª—è –í–∞—Å —Å–æ—Å—Ç–∞–≤–∞–∏—Ç: " + str(round(((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "‚úî–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.85 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) +
                                       "-" + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü¢C—Ä–µ–¥–Ω–∏–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.8 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) +
                                       "-" + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü°–ë–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç = " + str(round(0.75 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) +
                                       "-" + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üü†–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π –¥–µ—Ñ–∏—Ü–∏—Ç (—Ä–∏—Å–∫) = " + str(round(0.7 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) +
                                       "-" + str(round(0.6 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª\n"
                                       "üî¥–ü–æ—á—Ç–∏ –≥–æ–ª–æ–¥ –∏–ª–∏ –≥–æ–ª–æ–¥ (–æ–ø–∞—Å–Ω–æ) = –º–µ–Ω—å—à–µ " + str(round(0.5 * ((10 * ves + 6.25 * rost - 4.92 * let + 5) * 1.9))) + " –∫–∫–∞–ª –≤ –¥–µ–Ω—å",
                                       parse_mode='html', reply_markup=kb_4())
            else:
                await bot.send_message(message.from_user.id,"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –°–ü–ö. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É. ", parse_mode='html', reply_markup=kb_3())

@dp.message_handler(state=ClientStates.fullname)
async def load_fullname(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['fullname'] = message.text
    await ClientStates.gender.set()
    await message.answer(text="‚ö§–£–∫–∞–∂–∏—Ç–µ –í–∞—à –ø–æ–ª:", parse_mode='html', reply_markup=kb_2())

@dp.message_handler(state=ClientStates.gender)
async def load_gender(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['gender'] = message.text
    await ClientStates.age.set()
    await message.answer(text="üìÜ–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç:", parse_mode='html', reply_markup=ReplyKeyboardRemove())

@dp.message_handler(state=ClientStates.age)
async def load_age(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['age'] = message.text
    await ClientStates.height.set()
    await message.answer(text="üìè–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö:", parse_mode='html', reply_markup=ReplyKeyboardRemove())

@dp.message_handler(state=ClientStates.height)
async def load_height(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['height'] = message.text
    await ClientStates.weight.set()
    await message.answer(text="‚è≤–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–µ—Å –≤ –∫–≥(–æ–∫—Ä—É–≥–ª–∏—Ç–µ –¥–æ —Ü–µ–ª–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è):", parse_mode='html', reply_markup=ReplyKeyboardRemove())

@dp.message_handler(state=ClientStates.weight)
async def load_weight(message: types.Message, state: FSMContext) -> None:
    async with state.proxy() as data:
        data['weight'] = message.text
    await edit_user(state, user_id=message.from_user.id)
    await message.answer(text="üìù–ê–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞,\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                         parse_mode='html', reply_markup=kb_3())


    await state.finish()


@dp.pre_checkout_query_handler(lambda query: True)
async def pre_checkout_query(pre_checkout_q: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_q.id, ok=True)

@dp.message_handler(content_types=types.ContentType.SUCCESSFUL_PAYMENT)
async def successful_payment(message: types.Message):
    await pay(user_id=message.from_user.id)
    await bot.send_message(message.chat.id,
                           f"‚úÖ–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É {message.successful_payment.total_amount // 100} {message.successful_payment.currency} –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!!!",
                           reply_markup=kb_3())



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates = True, on_startup=on_startup)